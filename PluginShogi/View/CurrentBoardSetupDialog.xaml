<Window x:Class="VoteSystem.PluginShogi.View.CurrentBoardSetupDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:r="http://schemas.garnet-alice.net/ragnarok/xaml/presentation"
        xmlns:top="clr-namespace:VoteSystem.PluginShogi"
        mc:Ignorable="d" 
        Title="確認" ResizeMode="NoResize"
        SizeToContent="WidthAndHeight" MinWidth="300"
        d:DesignHeight="496" d:DesignWidth="300">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Ragnarok.Presentation;component/Themes/Common.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <r:EnumToBooleanConverter x:Key="enumToBooleanConverter" />
            
            <Style x:Key="timeSpanStyle" TargetType="r:NumericUpDown">
                <Setter Property="IsTabStop" Value="True" />
                
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="Error "/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- 相手の手番の時の更新用操作 -->
            <StackPanel x:Key="myTurnStackPanel"
                        Orientation="Vertical">
                <CheckBox Content="投票を停止する"
                          IsChecked="{Binding CBS_IsVoteStop}" />

                <CheckBox Content="持ち時間を追加"
                          IsChecked="{Binding CBS_IsUseAddLimitTime}" />
                <r:TimeSpanEditControl IsEnabled="{Binding CBS_IsUseAddLimitTime}"
                                       Value="{Binding CBS_AddLimitTime}"
                                       HorizontalAlignment="Right" />
            </StackPanel>

            <!-- 自分の手番の時の更新用操作 -->
            <StackPanel x:Key="yourTurnStackPanel"
                        Orientation="Vertical">
                <CheckBox Content="投票を開始する"
                          IsChecked="{Binding CBS_IsStartVote}" />

                <CheckBox Content="投票時間を設定"
                          IsChecked="{Binding CBS_IsUseVoteSpan}" />
                <r:TimeSpanEditControl IsEnabled="{Binding CBS_IsUseVoteSpan}"
                                       Value="{Binding CBS_VoteSpan}"
                                       HorizontalAlignment="Right" />
            </StackPanel>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid MinWidth="150">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <TextBlock HorizontalAlignment="Center"
                   Margin="30,20,30,20">
            現局面を更新します。
            <LineBreak />
            よろしいですか？
        </TextBlock>

        <CheckBox Grid.Row="1"
                  Margin="0,0,0,10"
                  HorizontalAlignment="Center"
                  Content="ついでに投票結果もクリアする"
                  IsChecked="{Binding CBS_IsClearVoteResult}" />

        <GroupBox Grid.Row="2"
                  Header="手番ごとの操作">
            <StackPanel Orientation="Vertical">
                <RadioButton Margin="0,3,0,0"
                             Content="操作不要"
                             IsChecked="{Binding SelectedRadioButton,
                                                 RelativeSource={RelativeSource AncestorType=Window},
                                                 Converter={StaticResource enumToBooleanConverter},
                                                 ConverterParameter=Default}" />

                <RadioButton x:Name="myTurnButton"
                             Margin="0,10,0,0"
                             Content="こちらの手番" 
                             IsChecked="{Binding SelectedRadioButton,
                                                 RelativeSource={RelativeSource AncestorType=Window},
                                                 Converter={StaticResource enumToBooleanConverter},
                                                 ConverterParameter=MyTurn}" />
                <GroupBox Header="操作" Margin="10,0,0,0"
                          IsEnabled="{Binding IsChecked, ElementName=myTurnButton}">
                    <StaticResource ResourceKey="myTurnStackPanel" />
                </GroupBox>

                <RadioButton x:Name="yourTurnButton"
                             Margin="0,15,0,0"
                             Content="相手の手番"
                             IsChecked="{Binding SelectedRadioButton,
                                                 RelativeSource={RelativeSource AncestorType=Window},
                                                 Converter={StaticResource enumToBooleanConverter},
                                                 ConverterParameter=YourTurn}" />
                <GroupBox Header="操作" Margin="10,0,0,0"
                          IsEnabled="{Binding IsChecked, ElementName=yourTurnButton}">
                    <StaticResource ResourceKey="yourTurnStackPanel" />
                </GroupBox>
            </StackPanel>
        </GroupBox>

        <Border Grid.Row="4" Margin="0,10,0,0"
                Background="LightGray">
            <Control Template="{StaticResource ButtonsTemplate}" />
        </Border>
    </Grid>
</Window>
