<Window x:Class="VoteSystem.PluginShogi.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:r="http://schemas.garnet-alice.net/ragnarok/xaml/presentation"
        xmlns:s="http://schemas.garnet-alice.net/votesystem/xaml/presentation"
        xmlns:l="clr-namespace:VoteSystem.PluginShogi"
        xmlns:v="clr-namespace:VoteSystem.PluginShogi.View"
        xmlns:svm="clr-namespace:VoteSystem.PluginShogi.ViewModel"
        mc:Ignorable="d" x:Name="window"
        Title="将棋盤ちゃん" Height="560" Width="666"
        AllowDrop="True"
        Background="{x:Static Brushes.Black}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonDictionary.xaml" />
                <ResourceDictionary Source="MainMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <r:BooleanToVisibilityConverter x:Key="visibilityConverterHidden" />
            <r:FontFamilyConverter x:Key="fontFamilyConverter" />
            
            <ImageBrush x:Key="banBrush"
                        ImageSource="{Binding DataContext.BanImage, ElementName=window}"
                        Opacity="{Binding DataContext.BanOpacity, ElementName=window}" />
            <ImageBrush x:Key="komadaiBrush"
                        ImageSource="{Binding DataContext.KomadaiImage, ElementName=window}"
                        Opacity="{Binding DataContext.BanOpacity, ElementName=window}" />
            
            <Storyboard x:Key="openStoryboard">
                <DoubleAnimation From="0.0" To="1.0"
                                 Duration="0:0:0.2"
                                 FillBehavior="HoldEnd" />
            </Storyboard>

            <Storyboard x:Key="closeStoryboard"
                        Storyboard.TargetName="variationBorder"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation From="1.0" To="0.0"
                                 Duration="0:0:0.2"
                                 FillBehavior="HoldEnd" />
            </Storyboard>

            <!-- 変化再生中は全体の色を変えます。-->
            <Style x:Key="variationStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding VariationState}"
                                 Value="Playing">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    
                    <!--<EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource closeStoryboard}" />
                    </EventTrigger>-->
                </Style.Triggers>
            </Style>

            <!-- 投票結果コンテキストメニュー -->
            <ContextMenu x:Key="contextMenu">
                <!-- CommandTargetの指定はwpfのバグを避けるために必要。
                     http://social.msdn.microsoft.com/forums/en-US/wpf/thread/7bd75a7c-eab4-4f3a-967b-94a9534a7455/ -->
                <MenuItem Header="投票結果の表示設定(_R)"
                          Command="{x:Static s:VoteResultControl.OpenSettingDialog}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            </ContextMenu>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- メインメニュー -->
        <Menu Grid.Row="0"
              VerticalAlignment="Top"
              HorizontalAlignment="Stretch"
              HorizontalContentAlignment="Stretch">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="棋譜の読み込み(_O)"
                          Command="{x:Static svm:Commands.LoadKifFile}"
                          InputGestureText="Ctrl+O" />
                <MenuItem Header="棋譜に名前を付けて保存(_A)"
                          Command="{x:Static svm:Commands.SaveKifFile}"
                          InputGestureText="Ctrl+S" />
                <MenuItem Header="クリップボード(_C)">
                    <MenuItem Header="棋譜の読み込み(_C)"
                              Command="{x:Static svm:Commands.PasteKifFile}" />
                    <Separator />
                    <MenuItem Header="棋譜の書き出し(_P)"
                              Command="{x:Static svm:Commands.CopyKifFile}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="NCVログを読み込み"
                          Command="{x:Static svm:Commands.ReadNcvLog}"
                          Visibility="{x:Static s:Global.IsNonPublishedVisibility}" />
                <MenuItem Header="終了(_X)"
                          Command="Close" />
            </MenuItem>

            <MenuItem Header="表示(_V)">
                <MenuItem Header="盤面反転(_T)"
                          IsCheckable="True" x:Name="boardReverse"
                          Command="{x:Static svm:Commands.SetReverseBoard}"
                          CommandParameter="{Binding IsChecked, ElementName=boardReverse}" />
                <MenuItem Header="投票結果を表示(_E)"
                          IsCheckable="True"
                          IsChecked="{Binding Settings.AS_IsShowVoteResult}" />
                <MenuItem Header="変化ウィンドウ(_V)"
                          Command="{x:Static svm:Commands.ShowMoveManageView}" />
                <Separator />
                <MenuItem Header="各種設定(_S)"
                          Command="{x:Static svm:Commands.ShowSettingDialog}" />
                <MenuItem Header="投票結果の表示設定(_R)"
                          Command="{x:Static s:VoteResultControl.OpenSettingDialog}" />
            </MenuItem>
        </Menu>

        <!-- ToolBarTrayの中に入れるとStretchしなくなります。-->
        <ToolBarTray Grid.Row="1">
            <StaticResource ResourceKey="toolBar" />
            <StaticResource ResourceKey="numberToolBar" />
        </ToolBarTray>

        <ToolBar Grid.Row="2"
                 Template="{StaticResource nicoToolBar}" />

        <ToolBar Grid.Row="3"
                 Template="{StaticResource variationToolBar}" />

        <Grid Grid.Row="4" Grid.RowSpan="2"
              ContextMenu="{DynamicResource contextMenu}">
            <!-- 背景 -->
            <r:VisualBackground x:Name="background"
                                FadeElement="{Binding ElementName=ShogiControl}" />

            <!-- 投票結果など -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0" />
                    <RowDefinition Height="101*" />
                    <RowDefinition Height="100*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="95*" />
                    <ColumnDefinition Width="300*" />
                    <ColumnDefinition Width="100*" />
                </Grid.ColumnDefinitions>

                <s:VoteResultControl
                    Grid.Row="2" Grid.Column="1"
                    x:Name="voteResultControl"
                    Visibility="{Binding Settings.AS_IsShowVoteResult,
                                         Converter={StaticResource visibilityConverterHidden}}"
                    VoteResult="{Binding VoteClient.VoteResult}"
                    VoteState="{Binding VoteClient.VoteState}"
                    TotalVoteLeaveTime="{Binding VoteClient.TotalVoteLeaveTime}"
                    VoteLeaveTime="{Binding VoteClient.VoteLeaveTime}"
                    Foreground="{Binding Settings.VR_FontColor,
                                         Converter={StaticResource brushConverter}}"
                    Background="{Binding Settings.VR_BackgroundColor,
                                         Converter={StaticResource brushConverter}}"
                    Stroke="{Binding Settings.VR_StrokeColor,
                                     Converter={StaticResource brushConverter}}"
                    FontFamily="{Binding Settings.VR_FontFamilyName,
                                         Converter={StaticResource fontFamilyConverter}}"
                    FontWeight="{Binding Settings.VR_FontWeight}"
                    FontStyle="{Binding Settings.VR_FontStyle}"
                    IsShowStroke="{Binding Settings.VR_IsShowStroke}"
                    StrokeThicknessInternal="{Binding Settings.VR_StrokeThicknessInternal}"
                    DisplayCandidateCount="{Binding Settings.VR_DisplayResultCount}"
                    IsDisplayPointFullWidth="{Binding Settings.VR_IsDisplayPointFullWidth}" />

                <!--<s:EvaluationControl
                    Grid.Row="1" Grid.Column="3"
                    ImageSetList="{s:ImageSetList Data/Image}" />-->
            </Grid>

            <!-- 将棋盤 -->
            <v:ShogiControl x:Name="ShogiControl"
                            Board="{Binding Board}"
                            EditMode="{Binding EditMode}"
                            EffectManager="{x:Static l:ShogiGlobal.EffectManager}"
                            PieceImage="{Binding KomaImage}"
                            BanBrush="{StaticResource banBrush}"
                            PieceBoxBrush="{StaticResource komadaiBrush}" />

            <!-- 変化自動再生時の色です。-->
            <Border Style="{StaticResource variationStyle}"
                    Opacity="{Binding VariationBorderOpacity}"
                    Background="#60001856"
                    IsHitTestVisible="False" />

            <!-- エンドロールです。-->
            <s:EndRollControl x:Name="endRoll"
                              DataGetter="{x:Static l:ShogiGlobal.VoterListGetter}"
                              Background="#A0000000"
                              RollTimeSeconds="30"
                              LineHeight="30.0"
                              OpacityLineCount="3"
                              IsHitTestVisible="False"
                              AutoUpdate="True"
                              IsUpdateBackground="True" />
        </Grid>

        <!-- ステータスバーです。-->
        <r:MessageStatusBar Grid.Row="5"
                            x:Name="MainStatusBar" x:FieldModifier="public"
                            Background="#60000000"
                            MessageBrush="{x:Static Brushes.Beige}"
                            MessageDuration="0:0:4" />
    </Grid>
</Window>
