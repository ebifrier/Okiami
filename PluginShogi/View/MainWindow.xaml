<Window x:Class="VoteSystem.PluginShogi.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:r="http://schemas.garnet-alice.net/ragnarok/xaml/presentation"
        xmlns:s="http://schemas.garnet-alice.net/votesystem/xaml/presentation"
        xmlns:l="clr-namespace:VoteSystem.PluginShogi"
        xmlns:v="clr-namespace:VoteSystem.PluginShogi.View"
        xmlns:svm="clr-namespace:VoteSystem.PluginShogi.ViewModel"
        mc:Ignorable="d" x:Name="window"
        Title="将棋盤ちゃん" Width="670" Height="480"
        AllowDrop="True" ResizeMode="CanResize"
        Background="{x:Static Brushes.White}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Ragnarok.Presentation.Shogi;component/View/ShogiUIElement3D.xaml" />
                <ResourceDictionary Source="CommonDictionary.xaml" />
                <ResourceDictionary Source="MainMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <r:BooleanToVisibilityConverter x:Key="visibilityConverterHidden"
                                            DefaultHiddenValue="Hidden" />
            <r:BooleanToVisibilityConverter x:Key="visibilityConverterCollapsed"
                                            DefaultHiddenValue="Collapsed" />
            <r:FontFamilyConverter x:Key="fontFamilyConverter" />
            
            <ImageBrush x:Key="banBrush"
                        ImageSource="{Binding DataContext.BanImage, ElementName=window}"
                        Opacity="{Binding DataContext.BanOpacity, ElementName=window}" />
            <ImageBrush x:Key="komadaiBrush"
                        ImageSource="{Binding DataContext.KomadaiImage, ElementName=window}"
                        Opacity="{Binding DataContext.BanOpacity, ElementName=window}" />

            <!-- 投票結果コンテキストメニュー -->
            <ContextMenu x:Key="contextMenu">
                <!-- CommandTargetの指定はwpfのバグを避けるために必要。
                     http://social.msdn.microsoft.com/forums/en-US/wpf/thread/7bd75a7c-eab4-4f3a-967b-94a9534a7455/ -->
                <MenuItem Header="評価値表示の設定(_L)"
                          InputGestureText="Ctrl+Shift+L"
                          Command="{x:Static r:EvaluationControl.OpenSettingDialog}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <MenuItem Header="投票結果の設定(_R)"
                          InputGestureText="Ctrl+Shift+R"
                          Command="{x:Static s:VoteResultControl.OpenSettingDialog}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />                
                <Separator />
                <MenuItem Header="エンディングモード(_E)"
                          IsCheckable="True"
                          IsChecked="{Binding GlobalModel.IsEndingMode}" />
            </ContextMenu>

            <!-- 右上の隙間の位置 -->
            <Transform3DGroup x:Key="Space0Transform">
                <ScaleTransform3D ScaleX="145" ScaleY="163" ScaleZ="1.0" />
                <TranslateTransform3D OffsetX="{r:Calc 300+245}" OffsetY="{r:Calc (10/2+163/2)}" />
            </Transform3DGroup>

            <!-- 左下の隙間の位置 -->
            <Transform3DGroup x:Key="Space1Transform">
                <ScaleTransform3D ScaleX="130" ScaleY="176" ScaleZ="1.0" />
                <TranslateTransform3D OffsetX="{r:Calc 300-240}" OffsetY="{r:Calc 360-(16/2+170/2)}" />
            </Transform3DGroup>

            <!-- 投票結果 -->
            <s:VoteResultControl
                x:Key="voteResultControl"
                Visibility="{Binding Settings.AS_IsShowVoteResult,
                                     Converter={StaticResource visibilityConverterHidden}}"
                VoteResult="{Binding VoteClient.VoteResult}"
                VoteState="{Binding VoteClient.VoteState}"
                TotalVoteLeaveTime="{Binding VoteClient.TotalVoteLeaveTime}"
                VoteLeaveTime="{Binding VoteClient.VoteLeaveTime}"
                ThinkTime="{Binding VoteClient.ThinkTime}"
                IsConnectedToLive="{Binding ClientModel.IsConnectedToLive}"
                IsUseLiveNotConnectWarning="{Binding Settings.SD_IsUseLiveNotConnectWarning}"
                Foreground="{Binding Settings.VR_FontColor,
                                     Converter={StaticResource brushConverter}}"
                Background="{Binding Settings.VR_BackgroundColor,
                                     Converter={StaticResource brushConverter}}"
                Stroke="{Binding Settings.VR_StrokeColor,
                                 Converter={StaticResource brushConverter}}"
                FontFamily="{Binding Settings.VR_FontFamilyName,
                                     Converter={StaticResource fontFamilyConverter}}"
                FontWeight="{Binding Settings.VR_FontWeight}"
                FontStyle="{Binding Settings.VR_FontStyle}"
                IsShowThinkTime="{Binding Settings.VR_IsShowThinkTime}"
                IsShowStroke="{Binding Settings.VR_IsShowStroke}"
                StrokeThicknessInternal="{Binding Settings.VR_StrokeThicknessInternal}"
                DisplayCandidateCount="{Binding Settings.VR_DisplayResultCount}"
                IsDisplayPointFullWidth="{Binding Settings.VR_IsDisplayPointFullWidth}" />

            <DiffuseMaterial x:Key="voteResultMaterial">
                <DiffuseMaterial.Brush>
                    <VisualBrush Visual="{StaticResource voteResultControl}"
                                 RenderOptions.CachingHint="Cache" />
                </DiffuseMaterial.Brush>
            </DiffuseMaterial>

            <!-- 投票結果 -->
            <r:EvaluationControl x:Key="evaluationControl"
                                 ImageSetList="{r:ImageSetList Data/Image}"
                                 Visibility="{Binding Settings.AS_IsShowEvaluationValue,
                                                      Converter={StaticResource visibilityConverterHidden}}"
                                 SelectedImageSetTitle="{Binding Settings.AS_EvaluationImageSetTitle}"
                                 UserPoint="{Binding VoteResult.EvaluationPoint,
                                                     Source={x:Static l:ShogiGlobal.VoteClient}}" />

            <DiffuseMaterial x:Key="evaluationControlMaterial">
                <DiffuseMaterial.Brush>
                    <VisualBrush Visual="{StaticResource evaluationControl}"
                                 RenderOptions.CachingHint="Cache" />
                </DiffuseMaterial.Brush>
            </DiffuseMaterial>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- メインメニュー -->
        <Menu Grid.Row="0"
              VerticalAlignment="Top"
              HorizontalAlignment="Stretch"
              HorizontalContentAlignment="Stretch"
              Visibility="{Binding GlobalModel.IsNormalMode, Mode=OneWay,
                                   Converter={StaticResource visibilityConverterCollapsed}}">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="棋譜の読み込み(_O)"
                          Command="{x:Static svm:Commands.LoadKifFile}"
                          InputGestureText="Ctrl+O" />
                <MenuItem Header="棋譜に名前を付けて保存(_A)"
                          Command="{x:Static svm:Commands.SaveKifFile}"
                          InputGestureText="Ctrl+S" />
                <MenuItem Header="クリップボード(_C)">
                    <MenuItem Header="棋譜の読み込み(_C)"
                              Command="{x:Static svm:Commands.PasteKifFile}" />
                    <Separator />
                    <MenuItem Header="棋譜の書き出し(_P)"
                              Command="{x:Static svm:Commands.CopyKifFile}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="NCVログを読み込み"
                          Command="{x:Static svm:Commands.ReadNcvLog}"
                          Visibility="{x:Static s:Global.IsNonPublishedVisibility}" />
                <MenuItem Header="終了(_X)"
                          Command="Close" />
            </MenuItem>

            <MenuItem Header="現局面(_C)">
                <MenuItem Header="現局面に戻す(_R)"
                          InputGestureText="Ctrl+R"
                          Command="{x:Static svm:Commands.RefreshCurrentBoard}" />
                <Separator />
                <MenuItem Header="現局面をサーバーから取得(_B)"
                          Command="{x:Static svm:Commands.GetCurrentBoardFromServer}" />
                <MenuItem Header="現局面をサーバーに設定(_C)"
                          InputGestureText="Ctrl+Shift+C"
                          Command="{x:Static svm:Commands.SetCurrentBoardToServer}" />
            </MenuItem>

            <MenuItem Header="表示(_V)">
                <MenuItem Header="盤面反転(_T)"
                          IsCheckable="True" x:Name="boardReverse"
                          Command="{x:Static r:ShogiCommands.SetReverseBoard}"
                          CommandParameter="{Binding IsChecked, ElementName=boardReverse}" />
                <Separator />
                <MenuItem Header="評価値を表示(_L)"
                          IsCheckable="True"
                          IsChecked="{Binding Settings.AS_IsShowEvaluationValue}" />
                <MenuItem Header="評価値の設定(_L)"
                          InputGestureText="Ctrl+Shift+L"
                          Command="{x:Static r:EvaluationControl.OpenSettingDialog}" />
                
                <MenuItem Header="投票結果を表示(_R)"
                          IsCheckable="True"
                          IsChecked="{Binding Settings.AS_IsShowVoteResult}" />
                <MenuItem Header="投票結果の設定(_R)"
                          InputGestureText="Ctrl+Shift+R"
                          Command="{x:Static s:VoteResultControl.OpenSettingDialog}" />
                <Separator />
                <MenuItem Header="設定(_D)"
                          InputGestureText="Ctrl+Shift+D"
                          Command="{x:Static svm:Commands.ShowSettingDialog}" />
                <Separator />
                <MenuItem Header="変化ウィンドウ(_V)"
                          InputGestureText="Ctrl+Shift+V"
                          Command="{x:Static svm:Commands.ShowMoveManageView}" />
                <MenuItem Header="エンディングウィンドウ(_E)"
                          InputGestureText="Ctrl+Shift+E"
                          Command="{x:Static svm:Commands.ShowEndingSettingWindow}" />
            </MenuItem>
        </Menu>

        <!-- ToolBarTrayの中に入れるとStretchしなくなります。-->
        <StackPanel Grid.Row="1"
                    Orientation="Vertical"
                    Visibility="{Binding GlobalModel.IsNormalMode, Mode=OneWay,
                                         Converter={StaticResource visibilityConverterCollapsed}}">
            <ToolBarTray>
                <StaticResource ResourceKey="toolBar" />
                <StaticResource ResourceKey="shogiToolBar" />
                <StaticResource ResourceKey="numberToolBar" />
            </ToolBarTray>

            <ToolBar Template="{StaticResource variationToolBar}" />
        </StackPanel>

        <Viewbox Grid.Row="2" Grid.RowSpan="2"
                 Stretch="Fill"
                 ContextMenu="{StaticResource contextMenu}">
            <Viewport3D Width="640" Height="360"
                        RenderOptions.EdgeMode="Unspecified">
                <Viewport3D.Camera>
                    <OrthographicCamera
                        Width="640"
                        LookDirection="0,0,1"
                        Position="320,180,-500"
                        UpDirection="0.000000,-1.000000,0.000000"
                        NearPlaneDistance="1" FarPlaneDistance="1000" />
                </Viewport3D.Camera>

                <r:BackgroundUIElement3D x:Name="background"
                                         FadeElement="{Binding ElementName=ShogiControl}" />

                <ModelUIElement3D IsHitTestVisible="False">
                    <Model3DGroup>
                        <AmbientLight Color="White" />

                        <!-- 投票結果 -->
                        <GeometryModel3D Geometry="{StaticResource squareMesh}"
                                         Transform="{StaticResource Space1Transform}"
                                         Material="{StaticResource voteResultMaterial}">
                        </GeometryModel3D>

                        <!-- 評価値 -->
                        <GeometryModel3D Geometry="{StaticResource squareMesh}"
                                         Transform="{StaticResource Space0Transform}"
                                         Material="{StaticResource evaluationControlMaterial}">
                        </GeometryModel3D>
                        
                        <Model3DGroup.Transform>
                            <TranslateTransform3D OffsetX="20" />
                        </Model3DGroup.Transform>
                    </Model3DGroup>
                </ModelUIElement3D>

                <!-- 将棋盤 -->
                <r:ShogiUIElement3D x:Name="ShogiControl"
                                    IsLeaveTimeVisible="False"
                                    Board="{Binding Board}"
                                    EditMode="{Binding EditMode}"
                                    EffectManager="{x:Static l:ShogiGlobal.EffectManager}"
                                    PieceImage="{Binding KomaImage}"
                                    BanBrush="{StaticResource banBrush}"
                                    PieceBoxBrush="{StaticResource komadaiBrush}"
                                    BlackPlayerName="{Binding Settings.SD_BlackPlayerName}"
                                    WhitePlayerName="{Binding Settings.SD_WhitePlayerName}"
                                    AutoPlayInterval="{Binding Settings.SD_AutoPlayInterval}">
                    <r:ShogiUIElement3D.Transform>
                        <TranslateTransform3D OffsetX="20" />
                    </r:ShogiUIElement3D.Transform>
                </r:ShogiUIElement3D>
            </Viewport3D>
        </Viewbox>

        <Viewbox Grid.Row="2" Grid.RowSpan="2"
                 Stretch="UniformToFill"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center">
            <v:ShogiEndRollControl x:Name="ShogiEndRoll"
                                   Width="640" Height="360"
                                   IsHitTestVisible="False"
                                   EndRollQuality="{Binding Settings.ED_EndRollQuality}"
                                   ShogiOpacity="{Binding Settings.ED_ShogiOpacity}"
                                   MaximumDisplayListeners="{Binding Settings.ED_MaximumDisplayListeners}"
                                   MaximumDisplayLiveOwners="{Binding Settings.ED_MaximumDisplayLiveOwners}"
                                   MovieVolume="{Binding Settings.ED_MovieVolume}" />
        </Viewbox>

        <!-- ステータスバーです。-->
        <r:MessageStatusBar Grid.Row="3"
                            x:Name="MainStatusBar" x:FieldModifier="public"
                            Background="#60000000"
                            MessageBrush="{x:Static Brushes.Beige}"
                            MessageDuration="0:0:4" />
    </Grid>
</Window>
