<rp:MovableWindow x:Class="VoteSystem.Client.View.VoteResultWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:rp="http://schemas.garnet-alice.net/ragnarok/xaml/presentation"
                  xmlns:p="clr-namespace:VoteSystem.Protocol;assembly=VoteProtocol"
                  xmlns:v="clr-namespace:VoteSystem.Client.View"
                  xmlns:vc="clr-namespace:VoteSystem.Client.View.Control"
                  xmlns:sys="clr-namespace:System;assembly=mscorlib"
                  Name="window" Title="投票結果ウィンドウ"
                  Background="Transparent"
                  Height="216" Width="309" ShowInTaskbar="False">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <vc:PointToStringConverter x:Key="pointToStringConverter" />

            <!-- コンテキストメニュー -->
            <ContextMenu x:Key="contextMenu">
                <!-- CommandTargetの指定はwpfのバグを避けるために必要。
                     http://social.msdn.microsoft.com/forums/en-US/wpf/thread/7bd75a7c-eab4-4f3a-967b-94a9534a7455/ -->
                <MenuItem Header="常に手前に表示する"
                          IsCheckable="True"
                          IsChecked="{Binding Topmost,
                                              RelativeSource={RelativeSource AncestorType=rp:MovableWindow}}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="ウィンドウを移動する"
                          Command="{x:Static rp:MovableWindow.MakeMoveWindow}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <MenuItem Header="ウィンドウを固定する"
                          Command="{x:Static rp:MovableWindow.MakeFixWindow}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="設定ダイアログを開く"
                          Command="{x:Static v:VoteResultWindow.OpenSettingDialog}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="閉じる"
                          Command="Close"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            </ContextMenu>
            
            <!-- 縁取り付き文字 -->
            <Style x:Key="decoratedTextStyle" TargetType="{x:Type rp:DecoratedText}">
                <Setter Property="FontFamily"
                        Value="{Binding DataContext.VR_FontFamily, ElementName=window}" />
                <Setter Property="FontStyle"
                        Value="{Binding DataContext.VR_FontStyle, ElementName=window}" />
                <Setter Property="FontWeight"
                        Value="{Binding DataContext.VR_FontWeight, ElementName=window}" />
                <Setter Property="Foreground"
                        Value="{Binding DataContext.VR_FontColor, ElementName=window,
                                        Converter={StaticResource brushConverter}}" />
                <Setter Property="Stroke"
                        Value="{Binding DataContext.VR_FontEdgeColor, ElementName=window,
                                        Converter={StaticResource brushConverter}}" />
                <Setter Property="StrokeThickness"
                        Value="{Binding DataContext.VR_FontEdgeLength, ElementName=window}" />
            </Style>

            <!-- 移動時の表示コントロール -->
            <ControlTemplate x:Key="movableControlTemplate">
                <Grid Background="{Binding VR_MovableBackgroundColor,
                                           Converter={StaticResource brushConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <Button Grid.Row="1" Grid.Column="1"
                            Content="決定" FontSize="28"
                            Opacity="0.4"
                            Command="{x:Static rp:MovableWindow.MakeFixWindow}" />
                </Grid>
            </ControlTemplate>

            <DataTemplate x:Key="decoratedText" DataType="sys:String">
                <Viewbox>
                    <rp:DecoratedText Style="{StaticResource decoratedTextStyle}"
                                      Text="{Binding}" />
                </Viewbox>
            </DataTemplate>
            
            <!-- 投票結果の各票を表示します。-->
            <DataTemplate x:Key="voteResultTemplate"
                          DataType="{x:Type p:Vote.VoteResult}">
                <Grid Visibility="{Binding Path=Candidate,
                                           Mode=OneWay,
                                           Converter={StaticResource visibilityConverterHidden}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <rp:DecoratedText Grid.Column="0"
                                      Style="{StaticResource decoratedTextStyle}"
                                      Text="{Binding Candidate}"
                                      MaxCharCount="8" />
                    <rp:DecoratedText Grid.Column="3"
                                      Style="{StaticResource decoratedTextStyle}">
                        <rp:DecoratedText.Text>
                            <!-- 親ウィンドウのDataContextを参照します。-->
                            <MultiBinding Converter="{StaticResource pointToStringConverter}">
                                <Binding Path="Point" />
                                <Binding Path="DataContext.VR_IsDisplayPointFullWidth"
                                         RelativeSource="{RelativeSource AncestorType=Window}"/>
                            </MultiBinding>
                        </rp:DecoratedText.Text>
                    </rp:DecoratedText>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type v:VoteResultWindow}">
            <Setter Property="ContextMenu"
                    Value="{StaticResource contextMenu}" />
        </Style>
    </Window.Style>

    <Grid>
        <!-- 投票結果の表示などを行います。-->
        <Viewbox Stretch="Fill">
            <Grid Background="{Binding VR_FixingBackgroundColor,
                                       Converter={StaticResource brushConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" MinWidth="40" />
                </Grid.ColumnDefinitions>

                <!-- 投票状態 -->
                <Grid Grid.Row="0" Grid.ColumnSpan="3">
                    <Border Background="{Binding VoteLeaveTimeBackgroundColor,
                                                 Converter={StaticResource brushConverter}}"
                            Opacity="0.7" />

                    <rp:DecoratedText Style="{StaticResource decoratedTextStyle}"
                                      HorizontalAlignment="Right"
                                      Text="{Binding VoteStateText}" />
                </Grid>

                <ContentControl Grid.Row="1" Grid.ColumnSpan="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="持ち時間"
                                HorizontalAlignment="Left" />
                <ContentControl Grid.Row="1" Grid.Column="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="{Binding TotalVoteLeaveTimeString}"
                                HorizontalAlignment="Right" />

                <ContentControl Grid.Row="2" Grid.ColumnSpan="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="投票時間"
                                HorizontalAlignment="Left" />
                <ContentControl Grid.Row="2" Grid.Column="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="{Binding VoteLeaveTimeString}"
                                HorizontalAlignment="Right" />

                <!--<ContentControl Grid.Row="3" Grid.ColumnSpan="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="時間延長"
                                Margin="10,0,0,0"
                                FontSize="8" />
                <ContentControl Grid.Row="3" Grid.Column="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                HorizontalAlignment="Right">
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource pointToStringConverter}">
                            <Binding Path="TimeExtendPoint" />
                            <Binding Path="VR_IsDisplayPointFullWidth" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>-->

                <ContentControl Grid.Row="4" Grid.ColumnSpan="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="延長拒否" />
                <ContentControl Grid.Row="4" Grid.Column="2"
                                ContentTemplate="{StaticResource decoratedText}"
                                HorizontalAlignment="Right">
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource pointToStringConverter}">
                            <Binding Path="TimeStablePoint" />
                            <Binding Path="VR_IsDisplayPointFullWidth" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>

                <ContentControl Grid.Row="6" Grid.ColumnSpan="3"
                                ContentTemplate="{StaticResource decoratedText}"
                                Content="投票結果"
                                HorizontalAlignment="Left" />
                <ItemsControl Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2"
                              ItemsSource="{Binding DisplayResult}"
                              ItemTemplate="{StaticResource voteResultTemplate}" />
            </Grid>
        </Viewbox>

        <!-- 移動用のボタンなどを表示します。-->
        <ContentControl
            Template="{StaticResource movableControlTemplate}"
            Visibility="{Binding IsMovable,
                                 RelativeSource={RelativeSource AncestorType=rp:MovableWindow},
                                 Converter={StaticResource visibilityConverterCollapsed}}" />
    </Grid>
</rp:MovableWindow>
