<r:MovableWindow x:Class="VoteSystem.Client.View.VoteResultWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:r="http://schemas.garnet-alice.net/ragnarok/xaml/presentation"
                 xmlns:s="http://schemas.garnet-alice.net/votesystem/xaml/presentation"
                 xmlns:v="clr-namespace:VoteSystem.Client.View"
                 Name="window" Title="投票結果ウィンドウ"
                 Background="Transparent"
                 Height="216" Width="309" ShowInTaskbar="False">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <r:FontFamilyConverter x:Key="fontFamilyConverter" />

            <!-- コンテキストメニュー -->
            <ContextMenu x:Key="contextMenu">
                <!-- CommandTargetの指定はwpfのバグを避けるために必要。
                     http://social.msdn.microsoft.com/forums/en-US/wpf/thread/7bd75a7c-eab4-4f3a-967b-94a9534a7455/ -->
                <MenuItem Header="常に手前に表示する"
                          IsCheckable="True"
                          IsChecked="{Binding Topmost,
                                              RelativeSource={RelativeSource AncestorType=r:MovableWindow}}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="ウィンドウを移動する"
                          Command="{x:Static r:MovableWindow.MakeMoveWindow}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <MenuItem Header="ウィンドウを固定する"
                          Command="{x:Static r:MovableWindow.MakeFixWindow}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="設定ダイアログを開く"
                          Command="{x:Static s:VoteResultControl.OpenSettingDialog}"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Separator />
                <MenuItem Header="閉じる"
                          Command="Close"
                          CommandTarget="{Binding PlacementTarget,
                                                  RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
            </ContextMenu>

            <!-- 移動時の表示コントロール -->
            <ControlTemplate x:Key="movableControlTemplate">
                <Grid Background="#80000850">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <Button Grid.Row="1" Grid.Column="1"
                            Content="決定" FontSize="28"
                            Opacity="0.4"
                            Command="{x:Static r:MovableWindow.MakeFixWindow}" />
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type v:VoteResultWindow}">
            <Setter Property="ContextMenu"
                    Value="{StaticResource contextMenu}" />
        </Style>
    </Window.Style>

    <Grid>
        <s:VoteResultControl x:Name="voteResultControl"
                             VoteResult="{Binding VoteClient.VoteResult}"
                             VoteState="{Binding VoteClient.VoteState}"
                             TotalVoteLeaveTime="{Binding VoteClient.TotalVoteLeaveTime}"
                             VoteLeaveTime="{Binding VoteClient.VoteLeaveTime}"
                             Foreground="{Binding Settings.VR_FontColor,
                                                  Converter={StaticResource brushConverter}}"
                             Background="{Binding Settings.VR_BackgroundColor,
                                                  Converter={StaticResource brushConverter}}"
                             Stroke="{Binding Settings.VR_StrokeColor,
                                              Converter={StaticResource brushConverter}}"
                             FontFamily="{Binding Settings.VR_FontFamilyName,
                                                  Converter={StaticResource fontFamilyConverter}}"
                             FontWeight="{Binding Settings.VR_FontWeight}"
                             FontStyle="{Binding Settings.VR_FontStyle}"
                             IsShowStroke="{Binding Settings.VR_IsShowStroke}"
                             StrokeThicknessInternal="{Binding Settings.VR_StrokeThicknessInternal}"
                             DisplayCandidateCount="{Binding Settings.VR_DisplayResultCount}"
                             IsDisplayPointFullWidth="{Binding Settings.VR_IsDisplayPointFullWidth}" />

        <!-- 移動用のボタンなどを表示します。-->
        <Control Template="{StaticResource movableControlTemplate}"
                 Visibility="{Binding IsMovable,
                                      RelativeSource={RelativeSource AncestorType=r:MovableWindow},
                                      Converter={StaticResource visibilityConverterCollapsed}}" />
    </Grid>
</r:MovableWindow>
